name: 🔨 Build with ECOW
inputs:
  os:
    required: true
  project:
    required: true

runs:
  using: composite
  steps:
    - name: 🐮 Build ECOW
      if: inputs.os == 'ubuntu-latest'
      shell: bash
      working-directory: ${{ inputs.project }}
      run: clang++ -I../ecow -std=c++20 build.cpp -o build.exe
    - name: 🍼 Build Project
      if: inputs.os == 'ubuntu-latest'
      shell: bash
      working-directory: ${{ inputs.project }}
      run: ./build.exe wasm android

    - name: 🐮 Build ECOW
      if: inputs.os == 'macos-latest'
      shell: bash
      working-directory: ${{ inputs.project }}
      run: clang++ -I../ecow -std=c++20 build.cpp -o build.exe
    - name: 🍼 Build Project
      if: inputs.os == 'macos-latest'
      shell: bash
      working-directory: ${{ inputs.project }}
      run: ./build.exe macosx iphoneos iphonesimulator

    - name: 🐮 Build ECOW
      if: inputs.os == 'windows-latest'
      shell: pwsh
      working-directory: ${{ inputs.project }}
      run: clang++ -I../ecow -std=c++20 build.cpp -o build.exe
    - name: 🍼 Build Project
      if: inputs.os == 'windows-latest'
      shell: pwsh
      working-directory: ${{ inputs.project }}
      run: ./build.exe
